USE co_wiki;

drop table login;

CREATE TABLE login (
  id varchar(100) not null,
  password varchar(100) NOT NULL,
  name varchar(100) DEFAULT NULL,
  PRIMARY KEY (id)
)charset=utf8;

ALTER TABLE login ADD COLUMN 직업 VARCHAR(50);

CREATE TABLE dictionary (
    id INT AUTO_INCREMENT PRIMARY KEY,
    term VARCHAR(255) NOT NULL,
    definition TEXT NOT NULL
) CHARSET=utf8;

ALTER TABLE dictionary
DROP COLUMN term,
ADD COLUMN kr VARCHAR(255),
ADD COLUMN en VARCHAR(255),
MODIFY COLUMN definition TEXT;

INSERT INTO dictionary (term, definition) VALUES
('백엔드', '백엔드란 웹 애플리케이션의 서버 측에서 동작하는 부분을 의미합니다. 백엔드는 데이터베이스와 상호 작용하고, 클라이언트로부터 요청을 처리하며, 비즈니스 로직을 수행합니다.'),
('프엔', '아아 이것은 프론트 엔드라는것이다');
('인공지능', 'Artificial Intelligence', '인공지능은 인간의 지능을 모방하여 컴퓨터 시스템이 학습하고 문제를 해결하는 능력입니다. 이는 자연어 처리, 음성 인식, 컴퓨터 비전, 로봇 공학 등을 포함합니다.'),
('머신 러닝', 'Machine Learning', '머신 러닝은 컴퓨터가 명시적인 프로그래밍 없이 데이터를 통해 학습하는 기술입니다. 이는 지도 학습, 비지도 학습, 강화 학습 등 다양한 유형이 있습니다.'),
('딥 러닝', 'Deep Learning', '딥 러닝은 다층 신경망을 사용하여 데이터를 처리하고 학습하는 머신 러닝의 하위 분야입니다. 이는 이미지 인식, 자연어 처리 등에서 높은 성능을 보입니다.'),
('신경망', 'Neural Network', '신경망은 인간의 뇌를 모방한 컴퓨팅 시스템으로, 뉴런과 유사한 구조를 통해 데이터를 처리하고 학습합니다. 이는 딥 러닝의 핵심 구성 요소입니다.'),
('자연어 처리', 'Natural Language Processing', '자연어 처리는 컴퓨터가 인간의 언어를 이해하고 처리하는 기술입니다. 이는 언어 번역, 감정 분석, 음성 인식 등 다양한 응용 분야가 있습니다.'),
('빅 데이터', 'Big Data', '빅 데이터는 매우 크고 복잡한 데이터 세트를 의미하며, 전통적인 데이터 처리 방법으로는 처리하기 어려운 데이터를 말합니다. 이는 분석, 예측, 의사 결정에 사용됩니다.'),
('클라우드 컴퓨팅', 'Cloud Computing', '클라우드 컴퓨팅은 인터넷을 통해 데이터를 저장하고 처리하는 기술로, 사용자는 물리적 서버 없이 컴퓨팅 자원을 사용할 수 있습니다.'),
('사물 인터넷', 'Internet of Things', '사물 인터넷은 인터넷에 연결된 물리적 장치들이 서로 데이터를 주고받으며 상호작용하는 네트워크를 의미합니다. 이는 스마트 홈, 헬스케어 등 다양한 분야에서 활용됩니다.'),
('블록체인', 'Blockchain', '블록체인은 분산된 데이터베이스 시스템으로, 중앙 기관 없이 거래 데이터를 안전하게 기록하고 공유할 수 있습니다. 이는 비트코인과 같은 암호화폐에 주로 사용됩니다.'),
('알고리즘', 'Algorithm', '알고리즘은 문제를 해결하기 위한 단계적 절차나 방법을 말합니다. 이는 컴퓨터 프로그램이 문제를 해결하는 데 사용됩니다.'),
('데이터베이스', 'Database', '데이터베이스는 체계적으로 정리된 데이터의 집합으로, 데이터를 저장, 관리, 검색하는 시스템입니다. 이는 SQL, NoSQL 등의 유형이 있습니다.'),
('SQL', 'Structured Query Language', 'SQL은 관계형 데이터베이스 관리 시스템에서 데이터를 관리하기 위해 사용되는 표준화된 프로그래밍 언어입니다.'),
('NoSQL', 'NoSQL', 'NoSQL은 비관계형 데이터베이스로, 데이터의 구조화가 유연하고 확장성이 뛰어난 데이터베이스 관리 시스템입니다. 이는 문서형, 키-값 저장소, 그래프 데이터베이스 등이 있습니다.'),
('API', 'Application Programming Interface', 'API는 서로 다른 소프트웨어 시스템 간에 상호 작용을 가능하게 하는 인터페이스입니다. 이는 데이터와 기능을 외부에 공개하고 사용할 수 있게 합니다.'),
('RESTful API', 'RESTful API', 'RESTful API는 REST 원칙을 따르는 API로, HTTP 프로토콜을 사용하여 클라이언트와 서버 간에 데이터를 주고받습니다. 이는 웹 서비스에서 널리 사용됩니다.'),
('GraphQL', 'GraphQL', 'GraphQL은 클라이언트가 필요한 데이터의 구조를 정의할 수 있게 해주는 쿼리 언어입니다. 이는 데이터의 과잉 전송을 줄이고 효율적인 데이터 요청을 가능하게 합니다.'),
('컨테이너', 'Container', '컨테이너는 소프트웨어를 실행하는 데 필요한 모든 파일과 환경을 포함하는 독립적인 패키지입니다. 이는 애플리케이션의 이동성과 확장성을 높입니다.'),
('도커', 'Docker', '도커는 컨테이너 기반의 오픈 소스 플랫폼으로, 애플리케이션을 신속하게 배포, 관리, 확장할 수 있습니다.'),
('쿠버네티스', 'Kubernetes', '쿠버네티스는 컨테이너화된 애플리케이션의 자동 배포, 스케일링, 운영을 지원하는 오픈 소스 시스템입니다.'),
('버전 관리', 'Version Control', '버전 관리는 소프트웨어 개발에서 소스 코드를 관리하고 변경 이력을 추적하는 시스템입니다. 이는 Git, SVN 등이 있습니다.'),
('Git', 'Git', 'Git은 분산 버전 관리 시스템으로, 소스 코드의 변경 이력을 추적하고 협업을 지원합니다. 이는 분산된 저장소에서 작업할 수 있게 합니다.'),
('GitHub', 'GitHub', 'GitHub는 Git을 사용하는 프로젝트를 호스팅하고 관리할 수 있는 웹 기반 플랫폼입니다. 이는 코드 공유와 협업을 지원합니다.'),
('CI/CD', 'Continuous Integration and Continuous Deployment', 'CI/CD는 지속적인 통합과 지속적인 배포를 의미하며, 소프트웨어 개발 프로세스를 자동화하여 빠르고 신뢰성 있는 배포를 가능하게 합니다.'),
('애자일', 'Agile', '애자일은 소프트웨어 개발 방법론으로, 유연하고 반복적인 작업 방식을 통해 빠르게 변화하는 요구사항에 대응합니다. 이는 스크럼, 칸반 등의 프레임워크를 포함합니다.'),
('스크럼', 'Scrum', '스크럼은 애자일 소프트웨어 개발 프레임워크로, 팀이 일정한 시간 내에 목표를 달성하기 위해 작업을 계획하고 수행합니다. 이는 스프린트, 일일 스탠드업 미팅 등을 포함합니다.'),
('칸반', 'Kanban', '칸반은 애자일 프로젝트 관리 방법으로, 작업의 흐름을 시각화하고 작업의 진행 상황을 추적합니다. 이는 작업 보드와 카드 시스템을 사용합니다.'),
('TDD', 'Test-Driven Development', 'TDD는 테스트 주도 개발을 의미하며, 코드를 작성하기 전에 테스트를 먼저 작성하는 개발 방법론입니다. 이는 코드의 품질과 유지보수성을 높입니다.'),
('BDD', 'Behavior-Driven Development', 'BDD는 행동 주도 개발을 의미하며, 시스템의 행동을 정의하고 그에 따라 테스트를 작성하는 방법론입니다. 이는 이해 관계자 간의 커뮤니케이션을 개선합니다.'),
('OOP', 'Object-Oriented Programming', 'OOP는 객체 지향 프로그래밍을 의미하며, 객체와 클래스 개념을 사용하여 소프트웨어를 설계하고 개발하는 방법론입니다. 이는 코드의 재사용성과 확장성을 높입니다.'),
('함수형 프로그래밍', 'Functional Programming', '함수형 프로그래밍은 함수 개념을 중심으로 소프트웨어를 설계하고 개발하는 방법론입니다. 이는 순수 함수와 불변성을 강조합니다.'),
('리팩토링', 'Refactoring', '리팩토링은 소프트웨어의 기능을 변경하지 않으면서 코드의 구조를 개선하는 작업입니다. 이는 코드의 가독성과 유지보수성을 높입니다.'),
('클린 코드', 'Clean Code', '클린 코드는 가독성과 유지보수성이 높은 코드를 의미하며, 코드의 품질을 높이기 위한 일련의 원칙과 방법론을 포함합니다.'),
('디자인 패턴', 'Design Patterns', '디자인 패턴은 소프트웨어 설계에서 반복적으로 발생하는 문제를 해결하기 위한 일반적인 해결책을 의미합니다. 이는 생성, 구조, 행위 패턴으로 나뉩니다.'),
('싱글톤 패턴', 'Singleton Pattern', '싱글톤 패턴은 특정 클래스의 인스턴스가 하나만 생성되도록 보장하는 디자인 패턴입니다. 이는 전역 상태를 관리하는 데 유용합니다.'),
('팩토리 패턴', 'Factory Pattern', '팩토리 패턴은 객체 생성 로직을 별도의 클래스나 메서드로 분리하여 객체 생성의 유연성을 높이는 디자인 패턴입니다.'),
('어댑터 패턴', 'Adapter Pattern', '어댑터 패턴은 호환되지 않는 인터페이스를 가진 클래스들이 함께 동작할 수 있도록 중간에 어댑터 클래스를 두는 디자인 패턴입니다.'),
('프록시 패턴', 'Proxy Pattern', '프록시 패턴은 다른 객체에 대한 접근을 제어하기 위해 대리자 객체를 사용하는 디자인 패턴입니다. 이는 접근 제어, 로깅, 캐싱 등에 사용됩니다.'),
('MVC', 'Model-View-Controller', 'MVC는 소프트웨어 설계 패턴으로, 애플리케이션을 모델, 뷰, 컨트롤러로 분리하여 관심사를 분리하고 유지보수성을 높입니다.'),
('MVVM', 'Model-View-ViewModel', 'MVVM은 소프트웨어 설계 패턴으로, 모델, 뷰, 뷰모델로 애플리케이션을 분리하여 데이터 바인딩과 뷰 로직을 쉽게 관리할 수 있습니다.'),
('레거시 코드', 'Legacy Code', '레거시 코드는 기존 시스템에 사용되고 있는 오래된 코드를 의미하며, 유지보수와 확장이 어려운 경우가 많습니다.'),
('API 게이트웨이', 'API Gateway', 'API 게이트웨이는 여러 서비스의 API 요청을 단일 진입점으로 라우팅하고 관리하는 시스템입니다. 이는 인증, 로깅, 모니터링 등을 지원합니다.'),
('마이크로서비스', 'Microservices', '마이크로서비스는 애플리케이션을 작은 독립적인 서비스들로 구성하여 개발하고 배포하는 아키텍처 스타일입니다. 이는 유연성과 확장성을 높입니다.'),
('도메인 주도 설계', 'Domain-Driven Design', '도메인 주도 설계는 소프트웨어 설계에서 도메인 모델을 중심으로 개발을 진행하는 방법론입니다. 이는 복잡한 도메인을 이해하고 표현하는 데 중점을 둡니다.'),
('CQRS', 'Command Query Responsibility Segregation', 'CQRS는 명령과 조회를 분리하여 시스템의 복잡성을 줄이고 성능을 최적화하는 아키텍처 패턴입니다.'),
('이벤트 소싱', 'Event Sourcing', '이벤트 소싱은 상태 변경을 이벤트로 저장하고, 이를 통해 현재 상태를 재구성하는 방법입니다. 이는 데이터 일관성과 추적성을 높입니다.'),
('리액트', 'React', '리액트는 사용자 인터페이스를 구축하기 위한 자바스크립트 라이브러리입니다. 이는 컴포넌트 기반 아키텍처와 가상 DOM을 사용하여 효율적인 렌더링을 제공합니다.'),
('뷰', 'Vue', '뷰는 사용자 인터페이스를 구축하기 위한 프로그레시브 자바스크립트 프레임워크입니다. 이는 선언적 렌더링과 컴포넌트 기반 아키텍처를 지원합니다.'),
('앵귤러', 'Angular', '앵귤러는 웹 애플리케이션을 구축하기 위한 플랫폼이자 프레임워크로, 타입스크립트를 사용하여 개발합니다. 이는 모듈, 컴포넌트, 서비스 등을 제공합니다.'),
('노드', 'Node.js', '노드는 자바스크립트 런타임으로, 서버 측 애플리케이션을 개발할 수 있게 해줍니다. 이는 비동기 I/O와 이벤트 기반 아키텍처를 사용합니다.'),
('익스프레스', 'Express', '익스프레스는 노드에서 동작하는 웹 애플리케이션 프레임워크로, 간단하고 유연한 웹 서버와 API를 구축할 수 있게 해줍니다.'),
('데브옵스', 'DevOps', '데브옵스는 개발(Development)과 운영(Operations)을 결합한 용어로, 소프트웨어 개발과 운영 간의 협업과 자동화를 강조합니다. 이는 지속적 통합과 지속적 배포를 포함합니다.'),
('클라우드 네이티브', 'Cloud Native', '클라우드 네이티브는 클라우드 환경에서 최적화된 애플리케이션을 개발하고 운영하는 접근 방식입니다. 이는 컨테이너, 마이크로서비스, 지속적 배포 등을 포함합니다.'),
('서버리스 컴퓨팅', 'Serverless Computing', '서버리스 컴퓨팅은 서버 관리 없이 코드 실행을 가능하게 하는 클라우드 컴퓨팅 모델입니다. 이는 함수 기반의 컴퓨팅 서비스를 제공합니다.'),
('CDN', 'Content Delivery Network', 'CDN은 콘텐츠 전송 네트워크로, 전 세계에 분산된 서버를 통해 사용자에게 콘텐츠를 빠르고 효율적으로 전달합니다.'),
('로드 밸런싱', 'Load Balancing', '로드 밸런싱은 여러 서버에 트래픽을 분산시켜 시스템의 성능과 가용성을 높이는 기술입니다. 이는 하드웨어 또는 소프트웨어 방식으로 구현됩니다.'),
('OAuth', 'OAuth', 'OAuth는 서드파티 애플리케이션이 리소스 소유자의 권한을 위임받아 접근할 수 있도록 하는 표준 프로토콜입니다. 이는 인증과 권한 부여를 지원합니다.'),
('JWT', 'JSON Web Token', 'JWT는 JSON 기반의 토큰으로, 클레임(claim)을 안전하게 전송하기 위해 사용됩니다. 이는 인증과 권한 부여에 주로 사용됩니다.'),
('SSL', 'Secure Sockets Layer', 'SSL은 인터넷 상에서 데이터를 암호화하여 안전하게 전송하기 위한 프로토콜입니다. 이는 현재 TLS로 대체되었습니다.'),
('TLS', 'Transport Layer Security', 'TLS는 SSL의 후속 프로토콜로, 인터넷 상에서 데이터를 암호화하여 안전하게 전송합니다. 이는 보안 통신을 위한 표준입니다.'),
('HTTP', 'Hypertext Transfer Protocol', 'HTTP는 웹 브라우저와 웹 서버 간에 데이터를 전송하기 위한 프로토콜입니다. 이는 요청-응답 모델을 사용합니다.'),
('HTTPS', 'Hypertext Transfer Protocol Secure', 'HTTPS는 HTTP에 TLS를 추가하여 데이터를 암호화하고 안전하게 전송합니다. 이는 웹 보안의 기본입니다.'),
('웹 소켓', 'WebSocket', '웹 소켓은 웹 브라우저와 서버 간에 전이중 통신을 가능하게 하는 프로토콜입니다. 이는 실시간 애플리케이션에 사용됩니다.'),
('REST', 'Representational State Transfer', 'REST는 웹 서비스를 설계하기 위한 아키텍처 스타일로, 리소스를 URI로 식별하고 HTTP 메서드를 통해 상호작용합니다.'),
('SPA', 'Single Page Application', 'SPA는 단일 페이지 애플리케이션으로, 최초 로드 이후 페이지 전체를 다시 로드하지 않고 동적으로 콘텐츠를 업데이트합니다. 이는 사용자 경험을 개선합니다.'),
('PWA', 'Progressive Web App', 'PWA는 프로그레시브 웹 애플리케이션으로, 웹 기술을 사용하여 네이티브 앱과 유사한 사용자 경험을 제공하는 애플리케이션입니다. 이는 오프라인 지원, 푸시 알림 등을 포함합니다.'),
('AMP', 'Accelerated Mobile Pages', 'AMP는 빠른 모바일 웹 페이지 로딩을 위한 오픈 소스 프로젝트입니다. 이는 경량화된 HTML과 제한된 자바스크립트를 사용합니다.'),
('SEO', 'Search Engine Optimization', 'SEO는 검색 엔진 최적화로, 웹 사이트가 검색 엔진 결과에서 높은 순위를 차지하도록 하는 방법입니다. 이는 키워드, 메타 태그, 링크 빌딩 등을 포함합니다.'),
('웹 접근성', 'Web Accessibility', '웹 접근성은 장애를 가진 사용자가 웹 콘텐츠에 접근하고 사용할 수 있도록 하는 원칙과 기술입니다. 이는 WCAG 가이드라인을 따릅니다.'),
('반응형 웹 디자인', 'Responsive Web Design', '반응형 웹 디자인은 다양한 디바이스와 화면 크기에 맞게 웹 페이지의 레이아웃을 조정하는 기술입니다. 이는 미디어 쿼리와 유연한 그리드 레이아웃을 사용합니다.'),
('크로스 브라우징', 'Cross Browsing', '크로스 브라우징은 다양한 웹 브라우저에서 웹 페이지가 동일하게 보이고 작동하도록 하는 기술입니다. 이는 표준 준수와 호환성 테스트를 포함합니다.'),
('웹 표준', 'Web Standards', '웹 표준은 W3C와 같은 표준화 기구에서 정한 웹 기술의 표준입니다. 이는 HTML, CSS, JavaScript 등을 포함합니다.'),
('CSS', 'Cascading Style Sheets', 'CSS는 웹 페이지의 스타일을 정의하는 언어입니다. 이는 레이아웃, 색상, 글꼴 등을 설정합니다.'),
('SASS', 'Syntactically Awesome Stylesheets', 'SASS는 CSS의 전처리기로, 변수, 중첩, 믹스인 등의 기능을 추가하여 CSS 작성의 효율성을 높입니다.'),
('웹 성능 최적화', 'Web Performance Optimization', '웹 성능 최적화는 웹 페이지의 로딩 속도와 반응성을 개선하는 방법입니다. 이는 이미지 최적화, 캐싱, 코드 압축 등을 포함합니다.'),
('A/B 테스트', 'A/B Testing', 'A/B 테스트는 두 가지 이상의 변형을 비교하여 어떤 것이 더 나은 성과를 내는지 평가하는 방법입니다. 이는 사용자 경험과 전환율을 개선하는 데 사용됩니다.'),
('사용자 경험', 'User Experience', '사용자 경험은 사용자가 제품이나 서비스를 사용할 때 느끼는 전반적인 경험을 의미합니다. 이는 사용성, 접근성, 감성적 만족도를 포함합니다.'),
('HCI', 'Human-Computer Interaction', 'HCI는 인간과 컴퓨터 간의 상호작용을 연구하는 학문입니다. 이는 사용자 인터페이스 설계, 사용자 경험 평가 등을 포함합니다.'),
('모바일 퍼스트', 'Mobile First', '모바일 퍼스트는 모바일 디바이스에 최적화된 디자인을 우선적으로 고려하는 접근 방식입니다. 이는 점진적 향상을 통해 데스크탑 환경으로 확장합니다.');




